apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

kapt {
    correctErrorTypes = true
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libraries.kotlinStd
    testImplementation libraries.kotlinStd

    implementation libraries.kotlinLogger
    testImplementation libraries.kotlinLogger

    implementation libraries.kotlinCoroutines
    testImplementation libraries.kotlinCoroutines

    // Необходимо для работы логгера kotlinLogger
    implementation libraries.forKotlinLogger
    testImplementation libraries.forKotlinLogger

    testImplementation libraries.junit
    testImplementation libraries.junitRuntime

    implementation libraries.gson
    testImplementation libraries.gson

    implementation libraries.daggerJava
    testImplementation libraries.daggerJava

    kapt libraries.daggerJavaProcessor
    kaptTest libraries.daggerJavaProcessor
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
// The lines below are totally necessary for adequate dagger file generation

apply plugin: 'idea'

idea {
    module {
        sourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
        generatedSourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
    }
}